name: Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  test:
    name: Test Python ${{ matrix.python-version }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.12', '3.13']

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-dev.txt
        pip install pytest-xdist pytest-timeout

    - name: Run tests
      run: |
        pytest -v --tb=short --maxfail=5
      timeout-minutes: 10

    - name: Run routing system validation
      run: |
        python code_agent/examples/validate_routing.py
      timeout-minutes: 5

    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-results-${{ matrix.os }}-${{ matrix.python-version }}
        path: |
          .pytest_cache/
          htmlcov/
        retention-days: 7

  test-coverage:
    name: Test Coverage
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-dev.txt

    - name: Run tests with coverage
      run: |
        pytest --cov=code_agent --cov=tools --cov=utils --cov-report=xml --cov-report=html --cov-report=term

    - name: Run routing system tests with coverage
      run: |
        pytest tests/code_agent/test_routing_system.py -v --cov=code_agent.core.routing_types --cov=code_agent.core.routing_config --cov=code_agent.core.prompt_enhancer --cov=code_agent.core.request_classifier --cov=code_agent.core.model_router --cov-report=term

    - name: Upload coverage reports
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: |
          coverage.xml
          htmlcov/
        retention-days: 30

    - name: Coverage comment
      if: github.event_name == 'pull_request'
      run: |
        echo "Coverage report generated. Check artifacts for details."
