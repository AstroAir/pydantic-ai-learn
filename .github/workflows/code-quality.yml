name: Code Quality

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  ruff:
    name: Ruff Linting
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
        cache: 'pip'

    - name: Install ruff
      run: |
        python -m pip install --upgrade pip
        pip install ruff

    - name: Run ruff check
      run: |
        ruff check . --output-format=github

    - name: Run ruff format check
      run: |
        ruff format --check .

  mypy:
    name: Type Checking (mypy)
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-dev.txt

    - name: Run mypy
      run: |
        mypy code_agent tools utils --show-error-codes --pretty
      continue-on-error: true

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
        cache: 'pip'

    - name: Install bandit
      run: |
        python -m pip install --upgrade pip
        pip install bandit[toml]

    - name: Run bandit security scan
      run: |
        bandit -r code_agent tools utils -f json -o bandit-report.json || true
        bandit -r code_agent tools utils

    - name: Upload security report
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: security-report
        path: bandit-report.json
        retention-days: 30

  dependency-check:
    name: Dependency Audit
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
        cache: 'pip'

    - name: Install pip-audit
      run: |
        python -m pip install --upgrade pip
        pip install pip-audit

    - name: Run pip-audit
      run: |
        pip-audit --desc --requirement requirements.txt --requirement requirements-dev.txt
      continue-on-error: true

  code-quality-summary:
    name: Code Quality Summary
    runs-on: ubuntu-latest
    needs: [ruff, mypy, security, dependency-check]
    if: always()
    steps:
    - name: Summary
      run: |
        echo "## Code Quality Check Results" >> $GITHUB_STEP_SUMMARY
        echo "- Ruff: ${{ needs.ruff.result }}" >> $GITHUB_STEP_SUMMARY
        echo "- MyPy: ${{ needs.mypy.result }}" >> $GITHUB_STEP_SUMMARY
        echo "- Security: ${{ needs.security.result }}" >> $GITHUB_STEP_SUMMARY
        echo "- Dependencies: ${{ needs.dependency-check.result }}" >> $GITHUB_STEP_SUMMARY
